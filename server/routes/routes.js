const express = require('express');
const router = express.Router();
const db = require('../src/db_config/db');
const bcrypt = require('bcrypt');
const jwt = require('jsonwebtoken');

router.post('/login', async (req, res) => {
  let payload = req.body;

  if (!payload.username || !payload.password) {
    return res.status(400).send({ error: 'All fields are required' });
  }

  try {
    const [data] = await db.execute(
      `
      SELECT * FROM users
      WHERE username = ?
    `,
      [payload.username]
    );

    if (!data.length) {
      return res
        .status(400)
        .send({ error: 'Username or password did not match' });
    }

    const isPasswordMatching = await bcrypt.compare(
      payload.password,
      data[0].password
    );

    if (isPasswordMatching) {
      // JWT token
      const token = jwt.sign(
        {
          username: data[0].username,
          id: data[0].id,
        },
        process.env.JWT_SECRET // JWT secret
      );

      return res.status(200).send({ token });
    }

    return res
      .status(400)
      .send({ error: 'Username or password did not match' });
  } catch (error) {
    console.error(error);
    return res.status(500).end();
  }
});

// get all users
router.get('/users', async (req, res) => {
  try {
    const connection = await db;
    const [results, fields] = await connection.query('SELECT * FROM Users');
    res.json(results); //  JSON format
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
});

// new user
router.post('/users', async (req, res) => {
  const { first_name, last_name, email, age } = req.body;
  const query =
    'INSERT INTO Users (first_name, last_name, email, age) VALUES (?, ?, ?, ?)';
  try {
    const connection = await db;
    const [result] = await connection.query(query, [
      first_name,
      last_name,
      email,
      age,
    ]);
    res.json({ id: result.insertId }); // ID generated by MySQL
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
});
router.put('/users/:id', async (req, res) => {
  const userId = req.params.id;
  const { first_name, last_name, email, age } = req.body;
  const query =
    'UPDATE Users SET first_name = ?, last_name = ?, email = ?, age = ? WHERE id = ?';
  try {
    const connection = await db;
    const [result] = await connection.query(query, [
      first_name,
      last_name,
      email,
      age,
      userId,
    ]);
    res.json({ message: 'User updated successfully' });
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
});

// delete user
router.delete('/users/:id', async (req, res) => {
  const userId = req.params.id;
  const query = 'DELETE FROM Users WHERE id = ?';
  try {
    const connection = await db;
    const [result] = await connection.query(query, [userId]);
    res.json({ message: 'User deleted successfully' });
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
});

module.exports = router;
